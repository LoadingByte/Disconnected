/*
 * This file is part of Disconnected.
 * Copyright (c) 2013 QuarterCode <http://www.quartercode.com/>
 *
 * Disconnected is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Disconnected is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Disconnected. If not, see <http://www.gnu.org/licenses/>.
 */

package com.quartercode.disconnected.resstore;

import java.util.List;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import com.quartercode.disconnected.sim.comp.Vulnerability;

/**
 * This class represents a loaded resource store vulnerability a computer part may have.
 * 
 * @see Vulnerability
 */
public class StoredVulnerability {

    private String       name;
    private List<String> scripts;

    /**
     * Creates a new empty stored vulnerability.
     */
    public StoredVulnerability() {

    }

    /**
     * Returns the name of the stored vulnerability.
     * 
     * @return The name of the stored vulnerability.
     */
    @XmlAttribute
    public String getName() {

        return name;
    }

    /**
     * Sets the name of the stored vulnerability to a new one.
     * 
     * @param name The new name of the stored vulnerability.
     */
    public void setName(String name) {

        this.name = name;
    }

    /**
     * Returns the scripts which get executed while the vulnerability gets exploited.
     * 
     * @return The scripts which get executed while the vulnerability gets exploited.
     */
    @XmlElement (name = "script")
    public List<String> getScripts() {

        return scripts;
    }

    /**
     * Sets the scripts which get executed while the vulnerability gets exploited to new ones.
     * 
     * @param scripts The new scripts which get executed while the vulnerability gets exploited.
     */
    public void setScripts(List<String> scripts) {

        this.scripts = scripts;
    }

}
